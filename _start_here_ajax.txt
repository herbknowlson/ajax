#------------------------------------------------------------------------
#
# Use this file (_start_here_ajax.txt) to understand how the Ajax project works
#
#--------------------------------------------------------------------------
# Locations: 
#------------
# Code: C:\xampp\htdocs\Ajax
# Logs: C:\xampp\apache\logs
# Ruby: C:\Ruby21\bin\setrbvars.bat
#----------------------------------------------------------------------------
#
#--------------------------------
# Scenario: Run from a web page
#--------------------------------
#
# Given I have XAMPP installed
# And I have Apache running
# And I have index.php page built
# And I http://localhost/Ajax/index.php as the page to open in Chrome
# 
# When I open Chrome 
# Then index.php page will launch
#
# ------------------------------------------
# Scenario: Run the program from a short cut
# ------------------------------------------
#
# As a Developer
# I want a Short Cut
# So I can test the program without using the browser
#
# Given I have every thing configured and working
#
# When I click the (batch - Shortcut)
# Then the command window opens
# And the Ruby program executes
# And the image files are loaded
# And the imageNames file is created
#
#
#-----------
# Reference
#-----------
# BDD format - Refernence: http://www.ryangreenhall.com/articles/bdd-by-example.html
#
# ----------
# User Story
# ----------
# As a [computer user]
# I want a web page
# So I have an easy way to view images
#
#------------------------
# Scenario: Progam Flow
#------------------------
#
# Chrome => home.php => home.php ==> batchIndex.bat => createIndexFileV01.rb -> indexNames.txt
            
                     => index.php <- indexNames.txt

                                  => batch.bat => createImageFileV02.rb -> imageNames.txt

                                  => Ajax.htm <- imageNames.txt



Note: PHP is Server-side script (no access to client input except from form submissions!)
      You can resubmit the same form with conditional PHP code 


#
# When I open Chrome
# And I click the HOME button (http://localhost/Ajax/home.php)
# Then the home.php page opens 
#
# When I click the index link on home.php
# Then the home.php page is called again
# And a parameter is passed (select=true)
#
# When the home page (home.php) is accessed
# And the parameter select=true
# Then the php function doSelect() is executed
# And a batch file is called (batchIndex.bat - execute ruby program createIndexFileV01.rb)
# And parameters are passed 
# And the index.php page is launched
#
# When I click a link on the index page
# Then the same page(index.php) is referenced
# And parameters are passed
#
# When the page (index.php) is accessed
# And the parameters are recieved
# Then the php function doSelect() is executed
# And the batch file is called 
# And parameters are passed (There are 2 parameters that represent the selection made)
#
# When the batch file is executed
# And parameters are recieved
# Then the Ruby evironment is setup
# And the Ruby program (createImageFileV02.rb) is executed
# And parameteres are passed
#
# When the Ruby program is executed
# And the paramters are recieved
# Then the selected directory(s) are read
# And a file is created containing filenames formatted in HTML
#
# When the program completes
# Then Ajax.htm page is launched
#
# When the Ajax.htm page is loaded
# Then Java script is executed
#
# When the Java script is executed
# Then the imageName.txt file is read
# And the contents are inserted in the page
# And the images display
# And a link is added to control scrolling
#
# When the Start Scrolling link is clicked
# Then the page starts to scroll

# 
#
# -----------
# Files used:
# -----------
# 1 (_start_here.txt) this file used to understand how the Ajax project works
# 2 (Ajax.htm) web page that displays the images. Conatins Ajax script to build the page.
# 3 (batch - Shortcut) Short cut used to execute the batch.bat file with one click
# 4 (batch.bat) Batch file that initailizes the Ruby environment and launched the browser
# 5 (createImageFile.rb) Ruby program that reads a directory and puts the file names in a text file
# 6 (imageNames.txt) Text file created by Ruby
#